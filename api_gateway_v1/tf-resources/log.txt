~/Desktop/sam-tf-ga
2023-08-29 15:53:56,741 | No config file found in this directory.
2023-08-29 15:53:56,741 | OSError occurred while reading TOML file: [Errno 2] No such file or directory: '/Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1/tf-resources/samconfig.toml'
2023-08-29 15:53:56,741 | Config file location: /Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1/tf-resources/samconfig.toml
2023-08-29 15:53:56,741 | Config file '/Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1/tf-resources/samconfig.toml' does not exist
2023-08-29 15:53:56,741 | Looking for internal hook package
2023-08-29 15:53:56,741 | Loaded internal hook package "terraform"
2023-08-29 15:53:56,745 | Running Prepare Hook to prepare the current application
2023-08-29 15:53:56,746 | Executing prepare hook of hook "terraform"
2023-08-29 15:53:56,758 | Normalize the terraform application root module directory path /Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1/tf-resources
2023-08-29 15:53:56,758 | Normalize the project root directory path /Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1
2023-08-29 15:53:56,758 | Normalize the OutputDirPath /Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1/tf-resources/.aws-sam-iacs/iacs_metadata
2023-08-29 15:53:56,758 | Initializing Terraform application
2023-08-29 15:53:56,960 | 
2023-08-29 15:53:56,960 | [0m[1mInitializing the backend...[0m
2023-08-29 15:53:57,249 | [0m[1mInitializing modules...[0m
2023-08-29 15:53:57,286 | 
2023-08-29 15:53:57,286 | [0m[1mInitializing provider plugins...[0m
2023-08-29 15:53:57,286 | - Reusing previous version of hashicorp/external from the dependency lock file
2023-08-29 15:53:57,531 | - Reusing previous version of hashicorp/local from the dependency lock file
2023-08-29 15:53:57,606 | - Reusing previous version of hashicorp/null from the dependency lock file
2023-08-29 15:53:57,676 | - Reusing previous version of hashicorp/aws from the dependency lock file
2023-08-29 15:53:57,958 | - Using previously-installed hashicorp/aws v4.67.0
2023-08-29 15:53:57,965 | - Using previously-installed hashicorp/external v2.3.1
2023-08-29 15:53:57,973 | - Using previously-installed hashicorp/local v2.4.0
2023-08-29 15:53:57,981 | - Using previously-installed hashicorp/null v3.2.1
2023-08-29 15:53:57,981 | 
2023-08-29 15:53:57,981 | [0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
2023-08-29 15:53:57,981 | [0m[32m
2023-08-29 15:53:57,981 | You may now begin working with Terraform. Try running "terraform plan" to see
2023-08-29 15:53:57,981 | any changes that are required for your infrastructure. All Terraform commands
2023-08-29 15:53:57,981 | should now work.
2023-08-29 15:53:57,981 | 
2023-08-29 15:53:57,981 | If you ever set or change modules or backend configuration for Terraform,
2023-08-29 15:53:57,981 | rerun this command to reinitialize your working directory. If you forget, other
2023-08-29 15:53:57,981 | commands will detect it and remind you to do so if necessary.[0m

2023-08-29 15:53:57,982 | Creating terraform plan and getting JSON output
2023-08-29 15:53:59,587 | [0m[1mmodule.lambda_function_auth.data.external.archive_prepare[0]: Reading...[0m[0m
2023-08-29 15:53:59,588 | [0m[1mmodule.lambda_function_responder.data.external.archive_prepare[0]: Reading...[0m[0m
2023-08-29 15:53:59,663 | [0m[1mmodule.lambda_function_responder.data.external.archive_prepare[0]: Read complete after 0s [id=-][0m
2023-08-29 15:53:59,683 | [0m[1mmodule.lambda_function_auth.data.external.archive_prepare[0]: Read complete after 0s [id=-][0m
2023-08-29 15:54:00,508 | 
2023-08-29 15:54:00,508 | Terraform used the selected providers to generate the following execution
2023-08-29 15:54:00,508 | plan. Resource actions are indicated with the following symbols:
2023-08-29 15:54:00,508 | [32m+[0m create[0m
2023-08-29 15:54:00,508 | 
2023-08-29 15:54:00,508 | Terraform planned the following actions, but then encountered a problem:
2023-08-29 15:54:00,508 | 
2023-08-29 15:54:00,508 | [1m  # module.lambda_function_auth.local_file.archive_plan[0][0m will be created
2023-08-29 15:54:00,508 | [0m  [32m+[0m[0m resource "local_file" "archive_plan" {
2023-08-29 15:54:00,508 | [32m+[0m[0m content              = jsonencode(
2023-08-29 15:54:00,508 | {
2023-08-29 15:54:00,508 | [32m+[0m[0m artifacts_dir = "builds"
2023-08-29 15:54:00,508 | [32m+[0m[0m build_plan    = [
2023-08-29 15:54:00,508 | [32m+[0m[0m [
2023-08-29 15:54:00,508 | [32m+[0m[0m "pip",
2023-08-29 15:54:00,508 | [32m+[0m[0m "python3.9",
2023-08-29 15:54:00,508 | [32m+[0m[0m "../src/auth/requirements.txt",
2023-08-29 15:54:00,508 | [32m+[0m[0m [90mnull[0m[0m,
2023-08-29 15:54:00,508 | [32m+[0m[0m [90mnull[0m[0m,
2023-08-29 15:54:00,508 | ],
2023-08-29 15:54:00,508 | [32m+[0m[0m [
2023-08-29 15:54:00,508 | [32m+[0m[0m "zip",
2023-08-29 15:54:00,508 | [32m+[0m[0m "../src/auth/",
2023-08-29 15:54:00,508 | [32m+[0m[0m [90mnull[0m[0m,
2023-08-29 15:54:00,508 | ],
2023-08-29 15:54:00,508 | ]
2023-08-29 15:54:00,508 | [32m+[0m[0m filename      = "builds/a9e44943782b24514c371ef288528fdea45a32481fc2a7951d80d094ab4d1bc4.zip"
2023-08-29 15:54:00,508 | [32m+[0m[0m runtime       = "python3.9"
2023-08-29 15:54:00,508 | }
2023-08-29 15:54:00,508 | )
2023-08-29 15:54:00,508 | [32m+[0m[0m content_base64sha256 = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m content_base64sha512 = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m content_md5          = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m content_sha1         = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m content_sha256       = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m content_sha512       = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m directory_permission = "0755"
2023-08-29 15:54:00,508 | [32m+[0m[0m file_permission      = "0644"
2023-08-29 15:54:00,508 | [32m+[0m[0m filename             = "builds/a9e44943782b24514c371ef288528fdea45a32481fc2a7951d80d094ab4d1bc4.plan.json"
2023-08-29 15:54:00,508 | [32m+[0m[0m id                   = (known after apply)
2023-08-29 15:54:00,508 | }
2023-08-29 15:54:00,508 | 
2023-08-29 15:54:00,508 | [1m  # module.lambda_function_auth.null_resource.archive[0][0m will be created
2023-08-29 15:54:00,508 | [0m  [32m+[0m[0m resource "null_resource" "archive" {
2023-08-29 15:54:00,508 | [32m+[0m[0m id       = (known after apply)
2023-08-29 15:54:00,508 | [32m+[0m[0m triggers = {
2023-08-29 15:54:00,508 | [32m+[0m[0m "filename"  = "builds/a9e44943782b24514c371ef288528fdea45a32481fc2a7951d80d094ab4d1bc4.zip"
2023-08-29 15:54:00,508 | [32m+[0m[0m "timestamp" = "1693346039676704000"
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | 
2023-08-29 15:54:00,509 | [1m  # module.lambda_function_auth.null_resource.sam_metadata_aws_lambda_function[0][0m will be created
2023-08-29 15:54:00,509 | [0m  [32m+[0m[0m resource "null_resource" "sam_metadata_aws_lambda_function" {
2023-08-29 15:54:00,509 | [32m+[0m[0m id       = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m triggers = {
2023-08-29 15:54:00,509 | [32m+[0m[0m "built_output_path"    = "builds/a9e44943782b24514c371ef288528fdea45a32481fc2a7951d80d094ab4d1bc4.zip"
2023-08-29 15:54:00,509 | [32m+[0m[0m "original_source_code" = "\"../src/auth/\""
2023-08-29 15:54:00,509 | [32m+[0m[0m "resource_name"        = "aws_lambda_function.this[0]"
2023-08-29 15:54:00,509 | [32m+[0m[0m "resource_type"        = "ZIP_LAMBDA_FUNCTION"
2023-08-29 15:54:00,509 | [32m+[0m[0m "source_code_property" = "path"
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | 
2023-08-29 15:54:00,509 | [1m  # module.lambda_function_responder.local_file.archive_plan[0][0m will be created
2023-08-29 15:54:00,509 | [0m  [32m+[0m[0m resource "local_file" "archive_plan" {
2023-08-29 15:54:00,509 | [32m+[0m[0m content              = jsonencode(
2023-08-29 15:54:00,509 | {
2023-08-29 15:54:00,509 | [32m+[0m[0m artifacts_dir = "builds"
2023-08-29 15:54:00,509 | [32m+[0m[0m build_plan    = [
2023-08-29 15:54:00,509 | [32m+[0m[0m [
2023-08-29 15:54:00,509 | [32m+[0m[0m "pip",
2023-08-29 15:54:00,509 | [32m+[0m[0m "python3.9",
2023-08-29 15:54:00,509 | [32m+[0m[0m "../src/responder/requirements.txt",
2023-08-29 15:54:00,509 | [32m+[0m[0m [90mnull[0m[0m,
2023-08-29 15:54:00,509 | [32m+[0m[0m [90mnull[0m[0m,
2023-08-29 15:54:00,509 | ],
2023-08-29 15:54:00,509 | [32m+[0m[0m [
2023-08-29 15:54:00,509 | [32m+[0m[0m "zip",
2023-08-29 15:54:00,509 | [32m+[0m[0m "../src/responder/",
2023-08-29 15:54:00,509 | [32m+[0m[0m [90mnull[0m[0m,
2023-08-29 15:54:00,509 | ],
2023-08-29 15:54:00,509 | ]
2023-08-29 15:54:00,509 | [32m+[0m[0m filename      = "builds/c71f6b9d3360b5d30240b77f03f237652710baa7c07413a2f10612ab8006e33d.zip"
2023-08-29 15:54:00,509 | [32m+[0m[0m runtime       = "python3.9"
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | )
2023-08-29 15:54:00,509 | [32m+[0m[0m content_base64sha256 = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m content_base64sha512 = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m content_md5          = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m content_sha1         = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m content_sha256       = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m content_sha512       = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m directory_permission = "0755"
2023-08-29 15:54:00,509 | [32m+[0m[0m file_permission      = "0644"
2023-08-29 15:54:00,509 | [32m+[0m[0m filename             = "builds/c71f6b9d3360b5d30240b77f03f237652710baa7c07413a2f10612ab8006e33d.plan.json"
2023-08-29 15:54:00,509 | [32m+[0m[0m id                   = (known after apply)
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | 
2023-08-29 15:54:00,509 | [1m  # module.lambda_function_responder.null_resource.archive[0][0m will be created
2023-08-29 15:54:00,509 | [0m  [32m+[0m[0m resource "null_resource" "archive" {
2023-08-29 15:54:00,509 | [32m+[0m[0m id       = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m triggers = {
2023-08-29 15:54:00,509 | [32m+[0m[0m "filename"  = "builds/c71f6b9d3360b5d30240b77f03f237652710baa7c07413a2f10612ab8006e33d.zip"
2023-08-29 15:54:00,509 | [32m+[0m[0m "timestamp" = "1693346039656238000"
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | }
2023-08-29 15:54:00,509 | 
2023-08-29 15:54:00,509 | [1m  # module.lambda_function_responder.null_resource.sam_metadata_aws_lambda_function[0][0m will be created
2023-08-29 15:54:00,509 | [0m  [32m+[0m[0m resource "null_resource" "sam_metadata_aws_lambda_function" {
2023-08-29 15:54:00,509 | [32m+[0m[0m id       = (known after apply)
2023-08-29 15:54:00,509 | [32m+[0m[0m triggers = {
2023-08-29 15:54:00,509 | [32m+[0m[0m "built_output_path"    = "builds/c71f6b9d3360b5d30240b77f03f237652710baa7c07413a2f10612ab8006e33d.zip"
2023-08-29 15:54:00,509 | [32m+[0m[0m "original_source_code" = "\"../src/responder/\""
2023-08-29 15:54:00,509 | [32m+[0m[0m "resource_name"        = "aws_lambda_function.this[0]"
2023-08-29 15:54:00,509 | [32m+[0m[0m "resource_type"        = "ZIP_LAMBDA_FUNCTION"
2023-08-29 15:54:00,510 | [32m+[0m[0m "source_code_property" = "path"
2023-08-29 15:54:00,510 | }
2023-08-29 15:54:00,510 | }
2023-08-29 15:54:00,510 | 
2023-08-29 15:54:00,510 | [1mPlan:[0m 6 to add, 0 to change, 0 to destroy.
2023-08-29 15:54:00,517 | [0m

2023-08-29 15:54:00,519 | Using SAM Template at /Users/ericdj/Desktop/sam-tf-ga/api_gateway_v1/tf-resources/template.yml
2023-08-29 15:54:00,536 | Telemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics
2023-08-29 15:54:00,595 | Telemetry endpoint configured to be https://aws-serverless-tools-telemetry.us-west-2.amazonaws.com/metrics
2023-08-29 15:54:00,595 | Unable to find Click Context for getting session_id.
2023-08-29 15:54:00,595 | Sending Telemetry: {'metrics': [{'events': {'requestId': '3f721ee4-45d6-4a5d-8577-37a6bbc82cd2', 'installationId': '03b8a3c0-f4d2-45c5-a78a-651ca8a18196', 'sessionId': 'f9dbf5e8-a42d-45df-980e-c6ba06e10398', 'executionEnvironment': 'CLI', 'ci': False, 'pyversion': '3.11.4', 'samcliVersion': '1.95.0', 'metricSpecificAttributes': {'events': [{'event_name': 'SamConfigFileExtension', 'event_value': '.toml', 'thread_id': '7802d9966f2a41da85de54fb30a0b700', 'time_stamp': '2023-08-29 21:53:56.741', 'exception_name': None}]}}}]}
2023-08-29 15:54:00,596 | Sending Telemetry: {'metrics': [{'commandRun': {'requestId': '13a14bba-aa12-4b61-a4d4-0edc4e7ff064', 'installationId': '03b8a3c0-f4d2-45c5-a78a-651ca8a18196', 'sessionId': 'f9dbf5e8-a42d-45df-980e-c6ba06e10398', 'executionEnvironment': 'CLI', 'ci': False, 'pyversion': '3.11.4', 'samcliVersion': '1.95.0', 'awsProfileProvided': False, 'debugFlagProvided': True, 'region': '', 'commandName': 'sam build', 'metricSpecificAttributes': {'projectType': 'Terraform', 'hookPackageId': 'terraform', 'hookPackageVersion': '1.0.0', 'gitOrigin': None, 'projectName': 'db59c5db75f337aee16a2607745bf47dd1cc8e323491ddd510cb91c1eccd5c5e', 'initialCommit': None}, 'duration': 0, 'exitReason': 'ValueError', 'exitCode': 255}}]}
2023-08-29 15:54:00,793 | Telemetry response: 200
2023-08-29 15:54:00,806 | Telemetry response: 200

Error: Single '}' encountered in format string
Traceback:
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/click/core.py", line 1055, in main
    rv = self.invoke(ctx)
         ^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/click/core.py", line 1657, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/click/core.py", line 1404, in invoke
    return ctx.invoke(self.callback, **ctx.params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/click/core.py", line 760, in invoke
    return __callback(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/click/decorators.py", line 84, in new_func
    return ctx.invoke(f, obj, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/click/core.py", line 760, in invoke
    return __callback(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/telemetry/metric.py", line 184, in wrapped
    raise exception  # pylint: disable=raising-bad-type
    ^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/telemetry/metric.py", line 145, in wrapped
    raise ctx.exception
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/commands/_utils/custom_options/hook_name_option.py", line 54, in handle_parse_result
    self._call_prepare_hook(iac_hook_wrapper, opts, ctx)
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/commands/_utils/custom_options/hook_name_option.py", line 82, in _call_prepare_hook
    metadata_file = iac_hook_wrapper.prepare(
                    ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/hook/hook_wrapper.py", line 99, in prepare
    output = self._execute("prepare", params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/hook/hook_wrapper.py", line 159, in _execute
    return _execute_as_module(functionality.module, functionality.method, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/hook/hook_wrapper.py", line 190, in _execute_as_module
    result = getattr(mod, method)(params)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/hook_packages/terraform/main.py", line 8, in prepare
    return prepare_hook(params)
           ^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/hook_packages/terraform/hooks/prepare/hook.py", line 85, in prepare
    tf_json = _generate_plan_file(skip_prepare_infra, terraform_application_dir)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/hook_packages/terraform/hooks/prepare/hook.py", line 178, in _generate_plan_file
    invoke_subprocess_with_loading_pattern(
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/utils/subprocess_utils.py", line 120, in invoke_subprocess_with_loading_pattern
    raise LoadingPatternError(f"Subprocess execution failed {command_args.get('args', [])}. {e}") from e
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/ericdj/penv/tf/lib/python3.11/site-packages/samcli/lib/utils/subprocess_utils.py", line 22, in __init__
    super().__init__(message=message_fmt.format(ex=self.ex))
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

An unexpected error was encountered while executing "sam build".
Search for an existing issue:
https://github.com/aws/aws-sam-cli/issues?q=is%3Aissue+is%3Aopen+Bug%3A%20sam%20build%20-%20ValueError
Or create a bug report:
https://github.com/aws/aws-sam-cli/issues/new?template=Bug_report.md&title=Bug%3A%20sam%20build%20-%20ValueError
